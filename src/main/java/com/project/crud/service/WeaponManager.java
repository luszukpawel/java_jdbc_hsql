package main.java.com.project.crud.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import main.java.com.project.crud.domain.Ammunition;
import main.java.com.project.crud.domain.Weapon;

public class WeaponManager implements IWeaponManager
{
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableWeapon = "CREATE TABLE Weapon(id INT GENERATED BY DEFAULT AS IDENTITY, model varchar(20),producer varchar(20),cost INT, PRIMARY KEY(id))";

	private PreparedStatement PS_add_Weapon;
	private PreparedStatement PS_delete_all;
	private PreparedStatement PS_delete_one;
	private PreparedStatement PS_get_all;
	private PreparedStatement PS_update;
	private PreparedStatement PS_select_id;
	private Statement statement;

	public WeaponManager()
	{
		try
		{
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next())
			{
				if ("Weapon".equalsIgnoreCase(rs.getString("TABLE_NAME")))
				{
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableWeapon);

			PS_add_Weapon = connection.prepareStatement("INSERT INTO Weapon (model) VALUES (?)");
			PS_delete_one = connection.prepareStatement("DELETE FROM Weapon WHERE model=?");
			PS_delete_all = connection.prepareStatement("DELETE FROM Weapon");
			PS_get_all = connection.prepareStatement("SELECT id, model FROM Weapon");
			PS_update = connection.prepareStatement("UPDATE Weapon SET model=? WHERE model=?");
			PS_select_id = connection.prepareStatement("SELECT id FROM Weapon WHERE model=?;");
		} catch (SQLException e)
		{
			e.printStackTrace();
		}
	}

	public Connection getConnection()
	{
		return connection;
	}
	
	public boolean add_Weapon(Weapon Weapon)
	{
		int count = 0;
		try
		{
			PS_add_Weapon.setString(1, Weapon.getModel());

			count = PS_add_Weapon.executeUpdate();

		} catch (SQLException e)
		{
			e.printStackTrace();
		}
		if (count == 1)
			return true;
		else
			return false;
	}

	public int delete_Weapon(Weapon Weapon)
	{
		int count = 0;
		try
		{
			PS_delete_one.setString(1, Weapon.getModel());
			count = PS_delete_one.executeUpdate();
		} catch (SQLException e)
		{
			e.printStackTrace();
		}
		return count;
	}
	
	public void delete_all_Weapons()
	{
		try
		{

			PS_delete_all.executeUpdate();

		} catch (SQLException e)
		{
			e.printStackTrace();
		}
	}

	public List<Weapon> get_all_Weapons()
	{
		List<Weapon> weapons = new ArrayList<Weapon>();

		try
		{
			ResultSet rs = PS_get_all.executeQuery();

			while (rs.next())
			{
				Weapon p = new Weapon();
				p.setId(rs.getInt("id"));
				p.setModel(rs.getString("model"));
				weapons.add(p);
			}

		} catch (SQLException e)
		{
			e.printStackTrace();
		}
		return weapons;
	}

	public boolean add_all_Weapons(List<Weapon> weapons)
	{
		try
		{
			connection.setAutoCommit(false);

			for (Weapon Weapon : weapons)
			{
				PS_add_Weapon.setString(1, Weapon.getModel());
				PS_add_Weapon.executeUpdate();
			}

			connection.commit();
			connection.setAutoCommit(true);
		} catch (SQLException e)
		{
			try
			{

				connection.rollback();
				connection.setAutoCommit(true);
			} catch (SQLException e1)
			{
				e1.printStackTrace();
			}
		}

		return false;
	}

	public int select_id_from_Weapon(String name)
	{
		int output = -1;
		try
		{
			PS_select_id.setString(1, name);
		} catch (SQLException e)
		{
			e.printStackTrace();
		}

		try
		{
			ResultSet rs = PS_select_id.executeQuery();
			while (rs.next())
			{
				output = rs.getInt("id");
			}
		} catch (SQLException e)
		{
			e.printStackTrace();
		}

		return output;
	}

	public boolean update_Weapon(String model, String model_new)
	{
		int count = 0;
		try
		{
			PS_update.setString(2, model);
			PS_update.setString(1, model_new);

			count = PS_update.executeUpdate();

		} catch (SQLException e)
		{
			e.printStackTrace();
		}
		if (count == 1)
			return true;
		else
			return false;
	}
}
