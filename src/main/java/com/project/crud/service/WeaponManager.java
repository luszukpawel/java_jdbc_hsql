package main.java.com.project.crud.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import main.java.com.project.crud.domain.Ammunition;
import main.java.com.project.crud.domain.Weapon;

public class WeaponManager implements IWeaponManager{

	private Connection connection;


	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	private String createTableWeapon = "CREATE TABLE Weapon(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), PRIMARY KEY(id))";

	private PreparedStatement PS_add_Weapon;
	private PreparedStatement PS_delete_all;
	private PreparedStatement PS_get_all;
	private PreparedStatement PS_update;
	private PreparedStatement PS_select_id;
	private PreparedStatement PS_delete_one;

	private Statement statement;

	public WeaponManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;

			while (rs.next()) {
				if ("Weapon".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableWeapon);

			PS_add_Weapon = connection.prepareStatement("INSERT INTO Weapon (name) VALUES (?)");
			PS_delete_one = connection.prepareStatement("DELETE FROM Weapon WHERE name=?");
			PS_update = connection.prepareStatement("UPDATE Weapon SET name=? WHERE name=?");
			PS_select_id = connection.prepareStatement("SELECT id FROM Weapon WHERE name=?;");
			PS_delete_all = connection.prepareStatement("DELETE FROM Weapon");
			PS_get_all = connection.prepareStatement("SELECT id, name FROM Weapon");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public Connection getConnection() {
		return connection;
	}

	public void delete_all_Weapons() {
		try {

			PS_delete_all.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	public boolean add_Weapon(Weapon Weapon) {
		int count = 0;
		try {
			PS_add_Weapon.setString(1, Weapon.getModel());

			count = PS_add_Weapon.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		if(count == 1) return true;
		else return false;
	}

	public boolean update_Weapon(String model, String model_new) {
		int count = 0;
		try {
			PS_update.setString(2, model);
			PS_update.setString(1, model_new);

			count = PS_update.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		if(count == 1) return true;
		else return false;
	}

	public int delete_Weapon(Weapon Weapon){

		return 0;
	}

	public int select_id_from_Weapon(String name){


		return 0;
	}

	public List<Weapon> get_all_Weapons() {
		List<Weapon> weapons = new ArrayList<Weapon>();

		return weapons;
	}

	public boolean add_all_Weapons(List<Weapon> weapons) {

		return false;
	}


}
